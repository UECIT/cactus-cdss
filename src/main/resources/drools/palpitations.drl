package uk.nhs.cdss.rules.palpitations

import java.util.Arrays

import uk.nhs.cdss.rules.InitialQuestionnaire
import uk.nhs.cdss.rules.NextQuestion
import uk.nhs.cdss.rules.AnswerAssertion
import uk.nhs.cdss.rules.OutcomeAnswerCondition

import uk.nhs.cdss.domain.Answer
import uk.nhs.cdss.domain.Assertion
import uk.nhs.cdss.domain.Assertion.Status
import uk.nhs.cdss.domain.CodeableConcept
import uk.nhs.cdss.domain.Questionnaire
import uk.nhs.cdss.domain.Outcome

import uk.nhs.cdss.engine.CodeDirectory

global CodeDirectory codeDirectory;

rule "Init"
salience 10000
when
    eval( true )
then
    // Chest pains
    insert( new InitialQuestionnaire("palpitations.chestPain") );
    insert( new AnswerAssertion("palpitations.chestPain", "q1", "Yes", codeDirectory.get("chestPain"), true));
    insert( new AnswerAssertion("palpitations.chestPain", "q1", "No", codeDirectory.get("chestPain"), false));
    insert( new AnswerAssertion("palpitations.chestPain", "q1", "Unsure", codeDirectory.get("chestPain"), false));

    insert( Outcome.referralRequest("chestPains", "call999-heartAttack").interim() );
    insert( new OutcomeAnswerCondition("chestPains", "palpitations.chestPain", "q1", Arrays.asList("Yes") ));

    insert( new NextQuestion("palpitations.neckPain", "palpitations.chestPain", "q1") );

    // Neck pains
    insert( new AnswerAssertion("palpitations.neckPain", "q2", "Yes", codeDirectory.get("neckPain"), true));
    insert( new AnswerAssertion("palpitations.neckPain", "q2", "No", codeDirectory.get("neckPain"), false));
    insert( new AnswerAssertion("palpitations.neckPain", "q2", "Unsure", codeDirectory.get("neckPain"), false));

    insert( Outcome.referralRequest("neckPains", "call999-heartAttack"));
    insert( new OutcomeAnswerCondition("neckPains", "palpitations.neckPain", "q2", Arrays.asList("Yes") ));

    insert( new NextQuestion("palpitations.breathing", "palpitations.neckPain", "q2") );

    // Breathing
    insert( new AnswerAssertion("palpitations.breathing", "q3", "Yes", codeDirectory.get("breathingProblems"), true));
    insert( new AnswerAssertion("palpitations.breathing", "q3", "No", codeDirectory.get("breathingProblems"), false));
    insert( new AnswerAssertion("palpitations.breathing", "q3", "Unsure", codeDirectory.get("breathingProblems"), false));

    insert( Outcome.referralRequest("breathing", "call999-heartAttack"));
    insert( new OutcomeAnswerCondition("breathing", "palpitations.breathing", "q3", Arrays.asList("Yes") ));

    insert( new NextQuestion("palpitations.heartProblems", "palpitations.breathing", "q3") );

    // Heart problems
    insert( new AnswerAssertion("palpitations.heartProblems", "q4", "Yes", codeDirectory.get("heartProblems"), true));
    insert( new AnswerAssertion("palpitations.heartProblems", "q4", "No", codeDirectory.get("heartProblems"), false));
    insert( new AnswerAssertion("palpitations.heartProblems", "q4", "Unsure", codeDirectory.get("heartProblems"), false));

    insert( Outcome.referralRequest("heartProblems", "call999-heartAttack"));
    insert( new OutcomeAnswerCondition("heartProblems", "palpitations.heartProblems", "q4", Arrays.asList("Yes") ));

    // Answered no to all questions
    insert( Outcome.carePlan("noSymptoms", "selfCare-palpitations"));
    insert( new OutcomeAnswerCondition("noSymptoms", "palpitations.heartProblems", "q4", Arrays.asList("No", "Unsure") ));
    insert( new OutcomeAnswerCondition("noSymptoms", "palpitations.breathing", "q3", Arrays.asList("No", "Unsure") ));
    insert( new OutcomeAnswerCondition("noSymptoms", "palpitations.neckPain", "q2", Arrays.asList("No", "Unsure") ));
    insert( new OutcomeAnswerCondition("noSymptoms", "palpitations.chestPain", "q1", Arrays.asList("No", "Unsure") ));
end